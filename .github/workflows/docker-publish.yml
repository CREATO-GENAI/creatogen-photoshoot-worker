name: Build and Push to GHCR

on:
  push:
    tags: ['v*']        # e.g. v1.2.3
    branches: ['main']  # also build on main
  workflow_dispatch: {}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write     # <-- needed to push to ghcr with GITHUB_TOKEN

    env:
      IMAGE_OWNER: creato-genai                     # your GitHub org/user (lowercase)
      IMAGE_NAME: creatogen-photoshoot-worker       # image repo name (lowercase)
      TAG: ${{ github.ref_type == 'tag' && github.ref_name || 'main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lowercase owner/name (Docker requirement)
        run: |
          echo "IMAGE_OWNER_LC=$(echo '${{ env.IMAGE_OWNER }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "IMAGE_NAME_LC=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (linux/amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          provenance: false        # prevents creating an OCI index
          sbom: false              # donâ€™t attach SBOM index
          outputs: type=registry   # push a plain image manifest
          tags: |
            ghcr.io/${{ env.IMAGE_OWNER_LC }}/${{ env.IMAGE_NAME_LC }}:${{ env.TAG }}
            ghcr.io/${{ env.IMAGE_OWNER_LC }}/${{ env.IMAGE_NAME_LC }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Make image public (first time only)
        run: |
          owner="${{ env.IMAGE_OWNER_LC }}"
          name="${{ env.IMAGE_NAME_LC }}"
          curl -L \
            -X PATCH \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/user/packages/container/${name}/visibility \
            -d '{"visibility":"public"}' || true
