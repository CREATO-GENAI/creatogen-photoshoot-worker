name: Build and Push to Runpod Registry

on:
  push:
    tags:
      - 'v*'                  # e.g. v1.2.3
    branches:
      - main                  # also run on main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    env:
      REGISTRY: registry.runpod.net
      # <<< your exact RunPod org/namespace (keep case) >>>
      NAMESPACE: CREATO-GENAI
      IMAGE_NAME: creatogen-photoshoot-worker
      TAG: ${{ github.ref_type == 'tag' && github.ref_name || 'main' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Quick, safe sanity check that your secrets are correct (expects HTTP 200)
      - name: Registry auth probe (HTTP 200 expected)
        shell: bash
        env:
          USERN: runpod
          PASS: ${{ secrets.RUNPOD_REGISTRY_PASS }}
        run: |
          set -euo pipefail
          AUTH=$(printf "%s:%s" "$USERN" "$PASS" | base64 | tr -d '\n')
          CODE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: Basic $AUTH" https://${{ env.REGISTRY }}/v2/)
          echo "Registry /v2/ probe → HTTP $CODE"
          [ "$CODE" = "200" ] || { echo "❌ Registry auth failed (HTTP $CODE). Username must be 'runpod' and password must be a valid rpa_ API key (enabled, Read & Write)."; exit 1; }

      - name: Log in to Runpod Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: runpod
          password: ${{ secrets.RUNPOD_REGISTRY_PASS }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}
            ${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
